{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\guddu kumar\\\\Desktop\\\\videoUploaderApp\\\\client\\\\src\\\\components\\\\VideoPlayer\\\\VideoPlayer.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { Redirect } from 'react-router-dom';\nimport videojs from 'video.js';\nimport './VideoPlayer.css'; //import Navbar from '../Navbar/Navbar';\n\nclass VideoPlayer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loaded: false,\n      videoJsOptions: null\n    };\n  }\n\n  componentDidMount() {\n    axios.get('http://127.0.0.1:3333/api/videoList', {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + JSON.parse(localStorage.getItem('userTokenTime')).token\n      }\n    }).then(res => {\n      return res.data.map(video => {\n        if (video.upload_title === this.props.match.params.videoTitle) {\n          this.setState({\n            loaded: true,\n            videoJsOptions: {\n              autoplay: false,\n              controls: true,\n              sources: [{\n                src: video.video_path\n              }]\n            }\n          }, () => {\n            this.player = videojs(this.videoNode, this.state.videoJsOptions, function onPlayerReady() {// console.log('onPlayerReady', this)\n            });\n          });\n        }\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    if (this.player) {\n      this.player.dispose();\n    }\n  }\n\n  render() {\n    if (!localStorage.getItem('userTokenTime')) return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/signIn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 56\n      }\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      style: {\n        width: \"100vw\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xs-12 col-sm-12 col-md-10 col-lg-8 mx-auto mt-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    }, this.state.loaded ? /*#__PURE__*/React.createElement(\"div\", {\n      \"data-vjs-player\": true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"video\", {\n      ref: node => this.videoNode = node,\n      className: \"video-js vjs-big-play-centered\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    })) : ' Loading ... '));\n  }\n\n}\n\nexport default VideoPlayer;","map":{"version":3,"sources":["C:/Users/guddu kumar/Desktop/videoUploaderApp/client/src/components/VideoPlayer/VideoPlayer.js"],"names":["React","axios","Redirect","videojs","VideoPlayer","Component","constructor","props","state","loaded","videoJsOptions","componentDidMount","get","headers","JSON","parse","localStorage","getItem","token","then","res","data","map","video","upload_title","match","params","videoTitle","setState","autoplay","controls","sources","src","video_path","player","videoNode","onPlayerReady","componentWillUnmount","dispose","render","width","node"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AAEA,OAAOC,OAAP,MAAoB,UAApB;AACA,OAAO,mBAAP,C,CACA;;AAEA,MAAMC,WAAN,SAA0BJ,KAAK,CAACK,SAAhC,CAA0C;AACxCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,KADG;AAEXC,MAAAA,cAAc,EAAE;AAFL,KAAb;AAID;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBV,IAAAA,KAAK,CAACW,GAAN,CAAU,qCAAV,EAAiD;AAC/CC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEP,yBAAiB,YAAYC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,eAArB,CAAX,EAAkDC;AAFxE;AADsC,KAAjD,EAKGC,IALH,CAKQC,GAAG,IAAI;AACb,aAAOA,GAAG,CAACC,IAAJ,CAASC,GAAT,CAAaC,KAAK,IAAI;AAC3B,YAAIA,KAAK,CAACC,YAAN,KAAuB,KAAKjB,KAAL,CAAWkB,KAAX,CAAiBC,MAAjB,CAAwBC,UAAnD,EAA+D;AAC7D,eAAKC,QAAL,CAAc;AACZnB,YAAAA,MAAM,EAAE,IADI;AAEZC,YAAAA,cAAc,EAAE;AACdmB,cAAAA,QAAQ,EAAE,KADI;AAEdC,cAAAA,QAAQ,EAAE,IAFI;AAGdC,cAAAA,OAAO,EAAE,CAAC;AACRC,gBAAAA,GAAG,EAAET,KAAK,CAACU;AADH,eAAD;AAHK;AAFJ,WAAd,EASG,MAAM;AACP,iBAAKC,MAAL,GAAc/B,OAAO,CAAC,KAAKgC,SAAN,EAAiB,KAAK3B,KAAL,CAAWE,cAA5B,EAA4C,SAAS0B,aAAT,GAAyB,CACxF;AACD,aAFoB,CAArB;AAGD,WAbD;AAcD;AACF,OAjBM,CAAP;AAkBD,KAxBD;AAyBD;;AAEDC,EAAAA,oBAAoB,GAAG;AACrB,QAAI,KAAKH,MAAT,EAAiB;AACf,WAAKA,MAAL,CAAYI,OAAZ;AACD;AACF;;AAEDC,EAAAA,MAAM,GAAG;AACP,QAAI,CAACvB,YAAY,CAACC,OAAb,CAAqB,eAArB,CAAL,EAA4C,oBAAO,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAC5C,wBACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAqB,MAAA,KAAK,EAAE;AAAEuB,QAAAA,KAAK,EAAE;AAAT,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,qDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKhC,KAAL,CAAWC,MAAX,gBACC;AAAK,6BAAL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,GAAG,EAAEgC,IAAI,IAAI,KAAKN,SAAL,GAAiBM,IAArC;AAA2C,MAAA,SAAS,EAAC,gCAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADD,GAIG,eALN,CADF,CADJ;AAWD;;AAxDuC;;AA2D1C,eAAerC,WAAf","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport videojs from 'video.js';\r\nimport './VideoPlayer.css';\r\n//import Navbar from '../Navbar/Navbar';\r\n\r\nclass VideoPlayer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loaded: false,\r\n      videoJsOptions: null\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get('http://127.0.0.1:3333/api/videoList', {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': 'Bearer ' + JSON.parse(localStorage.getItem('userTokenTime')).token\r\n      }\r\n    }).then(res => {\r\n      return res.data.map(video => {\r\n        if (video.upload_title === this.props.match.params.videoTitle) {\r\n          this.setState({\r\n            loaded: true,\r\n            videoJsOptions: {\r\n              autoplay: false,\r\n              controls: true,\r\n              sources: [{\r\n                src: video.video_path\r\n              }]\r\n            }\r\n          }, () => {\r\n            this.player = videojs(this.videoNode, this.state.videoJsOptions, function onPlayerReady() {\r\n              // console.log('onPlayerReady', this)\r\n            });\r\n          });\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.player) {\r\n      this.player.dispose()\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (!localStorage.getItem('userTokenTime')) return <Redirect to=\"/signIn\" />\r\n    return (  \r\n        <div className=\"row\" style={{ width: \"100vw\" }}>\r\n          <div className=\"col-xs-12 col-sm-12 col-md-10 col-lg-8 mx-auto mt-5\">\r\n            {this.state.loaded ? (\r\n              <div data-vjs-player>\r\n                <video ref={node => this.videoNode = node} className=\"video-js vjs-big-play-centered\" />\r\n              </div>\r\n            ) : ' Loading ... '}\r\n          </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default VideoPlayer;"]},"metadata":{},"sourceType":"module"}